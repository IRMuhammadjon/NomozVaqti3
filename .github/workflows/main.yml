trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  BuildConfiguration: release
  BuildPlatform: 'Any CPU'
  LocalPublishWebAppFolder: WebApp
  LocalPublishDbMigratorFolder: DbMigrator

steps:

- powershell: |      
      Write-Host "System.DefinitionId (9)": $(System.DefinitionId)
      Write-Host "System.DefinitionName": $(System.DefinitionName)
      Write-Host "Project GUID": $(System.TeamProjectId)
      Write-Host "BuildId is:  $(Build.BuildId)" 
      Write-Host "$(Build.SourceBranch) value is: $(Build.SourceBranch)"
      Write-Host "$(Build.ArtifactStagingDirectory) value is: $(Build.ArtifactStagingDirectory)"
  displayName: Variable output

- task: NuGetAuthenticate@0
  inputs:
    nuGetServiceConnections: 'MyGet feed'

- task: NuGetToolInstaller@1
 
- task: NuGetCommand@2
  displayName: Nuget restore
  inputs:
    restoreSolution: '$(solution)'
    feedsToUse: 'config'
    nugetConfigPath: 'NuGet.config'
    externalFeedCredentials: 'MyGet feed'  

- task: DotNetCoreCLI@2
  displayName: Build solution
  inputs:
    command: build
    arguments: --configuration $(BuildConfiguration) 
    configuration: $(BuildConfiguration)
  condition: succeeded()

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: test
    projects: '**/*.Tests.csproj'
    publishTestResults: true
    arguments: --configuration $(BuildConfiguration) --collect "Code coverage"
    nobuild: true
  condition: succeeded()

- task: DotNetCoreCLI@2
  displayName: Gather web app binaries for publication
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/*.Blazor.csproj'
    modifyOutputPath: false
    configuration: $(BuildConfiguration)
    arguments: --configuration $(BuildConfiguration) --no-restore --no-build --output $(Build.ArtifactStagingDirectory)/$(LocalPublishWebAppFolder)
    nobuild: true
  # condition: succeeded()
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: DotNetCoreCLI@2
  displayName: Gather migration app binaries for publication
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'src\MySolution.DbMigrator.csproj'
    configuration: $(BuildConfiguration)
    arguments: --configuration $(BuildConfiguration) --no-restore --no-build --output $(Build.ArtifactStagingDirectory)/$(LocalPublishDbMigratorFolder)
    nobuild: true
  # condition: succeeded()
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: Upload web app publication files to artifact
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)/$(LocalPublishWebAppFolder)
    ArtifactName: WebApp
  # condition: succeeded()
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))

- task: PublishBuildArtifacts@1
  displayName: Upload migration app publication files to artifact
  inputs:
    PathtoPublish: $(Build.ArtifactStagingDirectory)
    ArtifactName: DbMigrator
  # condition: succeeded()
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
